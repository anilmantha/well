package com.leonia.wellness.entity;

import java.util.ArrayList;

// Generated 10 Aug, 2016 6:51:03 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;

/**
 * Appointment generated by hbm2java
 */
@Entity
@Table(name = "appointment")
public class Appointment implements java.io.Serializable {

	private int appointmentid;
	private Billinginstructionmaster billinginstructionmaster;
	private Businesssourcemaster businesssourcemaster;
	private Corporatemaster corporatemaster;
	private Guestmaster guestmaster;
	private Segmentmaster segmentmaster;
	private Statusmaster statusmaster;
	private int sno;
	private Date appointmentdate;
	private Date bookingdate;
	private String queries;
	private boolean valid;
	private String updatedby;
	private Date updateddate;
	private String updatedip;
	private List<Appointmentservicedetails> appointmentservicedetailses = new ArrayList<Appointmentservicedetails>(
			0);
	private Set<Guesthistoryservices> guesthistoryserviceses = new HashSet<Guesthistoryservices>(
			0);
	private Set<Guesthistorycomplaints> guesthistorycomplaintses = new HashSet<Guesthistorycomplaints>(
			0);
	private Set<Appointmentstockconsumption> appointmentstockconsumptions = new HashSet<Appointmentstockconsumption>(
			0);
	private Set<Billdetails> billdetailses = new HashSet<Billdetails>(0);

	public Appointment() {
	}

	public Appointment(int appointmentid, Guestmaster guestmaster, int sno,
			Date appointmentdate, Date bookingdate, boolean valid,
			String updatedby, Date updateddate, String updatedip) {
		this.appointmentid = appointmentid;
		this.guestmaster = guestmaster;
		this.sno = sno;
		this.appointmentdate = appointmentdate;
		this.bookingdate = bookingdate;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
	}

	public Appointment(int appointmentid,
			Billinginstructionmaster billinginstructionmaster,
			Businesssourcemaster businesssourcemaster,
			Corporatemaster corporatemaster, Guestmaster guestmaster,
			Segmentmaster segmentmaster, Statusmaster statusmaster, int sno,
			Date appointmentdate, Date bookingdate, String queries, boolean valid,
			String updatedby, Date updateddate, String updatedip,
			List<Appointmentservicedetails> appointmentservicedetailses,
			Set<Guesthistoryservices> guesthistoryserviceses,
			Set<Guesthistorycomplaints> guesthistorycomplaintses,
			Set<Appointmentstockconsumption> appointmentstockconsumptions,
			Set<Billdetails> billdetailses) {
		this.appointmentid = appointmentid;
		this.billinginstructionmaster = billinginstructionmaster;
		this.businesssourcemaster = businesssourcemaster;
		this.corporatemaster = corporatemaster;
		this.guestmaster = guestmaster;
		this.segmentmaster = segmentmaster;
		this.statusmaster = statusmaster;
		this.sno = sno;
		this.queries = queries;
		this.appointmentdate = appointmentdate;
		this.bookingdate = bookingdate;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
		this.appointmentservicedetailses = appointmentservicedetailses;
		this.guesthistoryserviceses = guesthistoryserviceses;
		this.guesthistorycomplaintses = guesthistorycomplaintses;
		this.appointmentstockconsumptions = appointmentstockconsumptions;
		this.billdetailses = billdetailses;
	}

	@Id
	@Column(name = "appointmentid", unique = true, nullable = false)
	public int getAppointmentid() {
		return this.appointmentid;
	}

	public void setAppointmentid(int appointmentid) {
		this.appointmentid = appointmentid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "billinginstructionid")
	public Billinginstructionmaster getBillinginstructionmaster() {
		return this.billinginstructionmaster;
	}

	public void setBillinginstructionmaster(
			Billinginstructionmaster billinginstructionmaster) {
		this.billinginstructionmaster = billinginstructionmaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "businesssourceid")
	public Businesssourcemaster getBusinesssourcemaster() {
		return this.businesssourcemaster;
	}

	public void setBusinesssourcemaster(
			Businesssourcemaster businesssourcemaster) {
		this.businesssourcemaster = businesssourcemaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "corporateid")
	public Corporatemaster getCorporatemaster() {
		return this.corporatemaster;
	}

	public void setCorporatemaster(Corporatemaster corporatemaster) {
		this.corporatemaster = corporatemaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "guestid", nullable = false)
	public Guestmaster getGuestmaster() {
		return this.guestmaster;
	}

	public void setGuestmaster(Guestmaster guestmaster) {
		this.guestmaster = guestmaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "segmentid")
	public Segmentmaster getSegmentmaster() {
		return this.segmentmaster;
	}

	public void setSegmentmaster(Segmentmaster segmentmaster) {
		this.segmentmaster = segmentmaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "statusid")
	public Statusmaster getStatusmaster() {
		return this.statusmaster;
	}

	public void setStatusmaster(Statusmaster statusmaster) {
		this.statusmaster = statusmaster;
	}

	@Generated(GenerationTime.INSERT)
	@Column(name = "sno", insertable = false, nullable = false)
	public int getSno() {
		return this.sno;
	}

	public void setSno(int sno) {
		this.sno = sno;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "appointmentdate", nullable = false, length = 13)
	public Date getAppointmentdate() {
		return this.appointmentdate;
	}

	public void setAppointmentdate(Date appointmentdate) {
		this.appointmentdate = appointmentdate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "bookingdate", insertable = false, nullable = false, length = 13)
	public Date getBookingdate() {
		return this.bookingdate;
	}

	public void setBookingdate(Date bookingdate) {
		this.bookingdate = bookingdate;
	}
	
	@Column(name = "queries")
	public String getQueries() {
		return this.queries;
	}

	public void setQueries(String queries) {
		this.queries = queries;
	}

	@Column(name = "valid", nullable = false)
	public boolean isValid() {
		return this.valid;
	}

	public void setValid(boolean valid) {
		this.valid = valid;
	}

	@Column(name = "updatedby", nullable = false, length = 150)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updateddate", nullable = false, length = 29)
	public Date getUpdateddate() {
		return this.updateddate;
	}

	public void setUpdateddate(Date updateddate) {
		this.updateddate = updateddate;
	}

	@Column(name = "updatedip", nullable = false, length = 150)
	public String getUpdatedip() {
		return this.updatedip;
	}

	public void setUpdatedip(String updatedip) {
		this.updatedip = updatedip;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appointment")
	public List<Appointmentservicedetails> getAppointmentservicedetailses() {
		return this.appointmentservicedetailses;
	}

	public void setAppointmentservicedetailses(
			List<Appointmentservicedetails> appointmentservicedetailses) {
		this.appointmentservicedetailses = appointmentservicedetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appointment")
	public Set<Guesthistoryservices> getGuesthistoryserviceses() {
		return this.guesthistoryserviceses;
	}

	public void setGuesthistoryserviceses(
			Set<Guesthistoryservices> guesthistoryserviceses) {
		this.guesthistoryserviceses = guesthistoryserviceses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appointment")
	public Set<Guesthistorycomplaints> getGuesthistorycomplaintses() {
		return this.guesthistorycomplaintses;
	}

	public void setGuesthistorycomplaintses(
			Set<Guesthistorycomplaints> guesthistorycomplaintses) {
		this.guesthistorycomplaintses = guesthistorycomplaintses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appointment")
	public Set<Appointmentstockconsumption> getAppointmentstockconsumptions() {
		return this.appointmentstockconsumptions;
	}

	public void setAppointmentstockconsumptions(
			Set<Appointmentstockconsumption> appointmentstockconsumptions) {
		this.appointmentstockconsumptions = appointmentstockconsumptions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "appointment")
	public Set<Billdetails> getBilldetailses() {
		return this.billdetailses;
	}

	public void setBilldetailses(Set<Billdetails> billdetailses) {
		this.billdetailses = billdetailses;
	}

}
