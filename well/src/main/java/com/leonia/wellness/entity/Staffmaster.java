package com.leonia.wellness.entity;

// Generated 8 Aug, 2016 12:23:20 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;

/**
 * Staffmaster generated by hbm2java
 */
@Entity
@Table(name = "staffmaster")
public class Staffmaster implements java.io.Serializable {

	private int staffid;
	private Citymaster citymaster;
	private Countrymaster countrymaster;
	private Departmentmaster departmentmaster;
	private Dropdowndetails dropdowndetails;
	private Statemaster statemaster;
	private int sno;
	private String staffname;
	private String email;
	private Date dob;
	private Long mobile;
	private String address;
	private Integer pincode;
	private String nationality;
	private String desgination;
	private boolean valid;
	private String updatedby;
	private Date updateddate;
	private String updatedip;
	private int weekoff;
	private byte[] staffphoto;
	private Set<Ticketmaster> ticketmasters = new HashSet<Ticketmaster>(0);
	private Set<Staffqualification> staffqualifications = new HashSet<Staffqualification>(
			0);
	private Set<Servicestaffmaster> servicestaffmasters = new HashSet<Servicestaffmaster>(
			0);
	private Set<Staffskill> staffskills = new HashSet<Staffskill>(0);
	private Set<Employeeroster> employeerosters = new HashSet<Employeeroster>(0);
	private Set<Appointmentservicedetails> appointmentservicedetailses = new HashSet<Appointmentservicedetails>(
			0);

	public Staffmaster() {
	}

	public Staffmaster(int staffid, Dropdowndetails dropdowndetails, int sno,
			String staffname, boolean valid, String updatedby,
			Date updateddate, String updatedip, int weekoff) {
		this.staffid = staffid;
		this.dropdowndetails = dropdowndetails;
		this.sno = sno;
		this.staffname = staffname;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
		this.weekoff = weekoff;
	}

	public Staffmaster(int staffid, Citymaster citymaster,
			Countrymaster countrymaster, Departmentmaster departmentmaster,
			Dropdowndetails dropdowndetails, Statemaster statemaster, int sno,
			String staffname, String email, Date dob, Long mobile,
			String address, Integer pincode, String nationality,
			String desgination, boolean valid, String updatedby,
			Date updateddate, String updatedip, int weekoff, byte[] staffphoto,
			Set<Ticketmaster> ticketmasters,
			Set<Staffqualification> staffqualifications,
			Set<Servicestaffmaster> servicestaffmasters,
			Set<Staffskill> staffskills, Set<Employeeroster> employeerosters,
			Set<Appointmentservicedetails> appointmentservicedetailses) {
		this.staffid = staffid;
		this.citymaster = citymaster;
		this.countrymaster = countrymaster;
		this.departmentmaster = departmentmaster;
		this.dropdowndetails = dropdowndetails;
		this.statemaster = statemaster;
		this.sno = sno;
		this.staffname = staffname;
		this.email = email;
		this.dob = dob;
		this.mobile = mobile;
		this.address = address;
		this.pincode = pincode;
		this.nationality = nationality;
		this.desgination = desgination;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
		this.weekoff = weekoff;
		this.staffphoto = staffphoto;
		this.ticketmasters = ticketmasters;
		this.staffqualifications = staffqualifications;
		this.servicestaffmasters = servicestaffmasters;
		this.staffskills = staffskills;
		this.employeerosters = employeerosters;
		this.appointmentservicedetailses = appointmentservicedetailses;
	}

	@Id
	@Column(name = "staffid", unique = true, nullable = false)
	public int getStaffid() {
		return this.staffid;
	}

	public void setStaffid(int staffid) {
		this.staffid = staffid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "cityid")
	public Citymaster getCitymaster() {
		return this.citymaster;
	}

	public void setCitymaster(Citymaster citymaster) {
		this.citymaster = citymaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "countryid")
	public Countrymaster getCountrymaster() {
		return this.countrymaster;
	}

	public void setCountrymaster(Countrymaster countrymaster) {
		this.countrymaster = countrymaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "departmentid")
	public Departmentmaster getDepartmentmaster() {
		return this.departmentmaster;
	}

	public void setDepartmentmaster(Departmentmaster departmentmaster) {
		this.departmentmaster = departmentmaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "genderid", nullable = false)
	public Dropdowndetails getDropdowndetails() {
		return this.dropdowndetails;
	}

	public void setDropdowndetails(Dropdowndetails dropdowndetails) {
		this.dropdowndetails = dropdowndetails;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "stateid")
	public Statemaster getStatemaster() {
		return this.statemaster;
	}

	public void setStatemaster(Statemaster statemaster) {
		this.statemaster = statemaster;
	}

	@Generated(GenerationTime.INSERT)
	@Column(name = "sno", insertable = false, nullable = false)
	public int getSno() {
		return this.sno;
	}

	public void setSno(int sno) {
		this.sno = sno;
	}

	@Column(name = "staffname", nullable = false, length = 500)
	public String getStaffname() {
		return this.staffname;
	}

	public void setStaffname(String staffname) {
		this.staffname = staffname;
	}

	@Column(name = "email", length = 100)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dob", length = 13)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "mobile")
	public Long getMobile() {
		return this.mobile;
	}

	public void setMobile(Long mobile) {
		this.mobile = mobile;
	}

	@Column(name = "address")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "pincode")
	public Integer getPincode() {
		return this.pincode;
	}

	public void setPincode(Integer pincode) {
		this.pincode = pincode;
	}

	@Column(name = "nationality", length = 100)
	public String getNationality() {
		return this.nationality;
	}

	public void setNationality(String nationality) {
		this.nationality = nationality;
	}

	@Column(name = "desgination", length = 100)
	public String getDesgination() {
		return this.desgination;
	}

	public void setDesgination(String desgination) {
		this.desgination = desgination;
	}

	@Column(name = "valid", nullable = false)
	public boolean isValid() {
		return this.valid;
	}

	public void setValid(boolean valid) {
		this.valid = valid;
	}

	@Column(name = "updatedby", nullable = false, length = 150)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updateddate", nullable = false, length = 29)
	public Date getUpdateddate() {
		return this.updateddate;
	}

	public void setUpdateddate(Date updateddate) {
		this.updateddate = updateddate;
	}

	@Column(name = "updatedip", nullable = false, length = 150)
	public String getUpdatedip() {
		return this.updatedip;
	}

	public void setUpdatedip(String updatedip) {
		this.updatedip = updatedip;
	}

	@Column(name = "weekoff", nullable = false)
	public int getWeekoff() {
		return this.weekoff;
	}

	public void setWeekoff(int weekoff) {
		this.weekoff = weekoff;
	}

	@Column(name = "staffphoto")
	public byte[] getStaffphoto() {
		return this.staffphoto;
	}

	public void setStaffphoto(byte[] staffphoto) {
		this.staffphoto = staffphoto;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staffmaster")
	public Set<Ticketmaster> getTicketmasters() {
		return this.ticketmasters;
	}

	public void setTicketmasters(Set<Ticketmaster> ticketmasters) {
		this.ticketmasters = ticketmasters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staffmaster")
	public Set<Staffqualification> getStaffqualifications() {
		return this.staffqualifications;
	}

	public void setStaffqualifications(
			Set<Staffqualification> staffqualifications) {
		this.staffqualifications = staffqualifications;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staffmaster")
	public Set<Servicestaffmaster> getServicestaffmasters() {
		return this.servicestaffmasters;
	}

	public void setServicestaffmasters(
			Set<Servicestaffmaster> servicestaffmasters) {
		this.servicestaffmasters = servicestaffmasters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staffmaster")
	public Set<Staffskill> getStaffskills() {
		return this.staffskills;
	}

	public void setStaffskills(Set<Staffskill> staffskills) {
		this.staffskills = staffskills;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staffmaster")
	public Set<Employeeroster> getEmployeerosters() {
		return this.employeerosters;
	}

	public void setEmployeerosters(Set<Employeeroster> employeerosters) {
		this.employeerosters = employeerosters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "staffmaster")
	public Set<Appointmentservicedetails> getAppointmentservicedetailses() {
		return this.appointmentservicedetailses;
	}

	public void setAppointmentservicedetailses(
			Set<Appointmentservicedetails> appointmentservicedetailses) {
		this.appointmentservicedetailses = appointmentservicedetailses;
	}

}
