package com.leonia.wellness.entity;
// Generated Aug 20, 2016 2:52:14 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;

/**
 * Sbumaster generated by hbm2java
 */
@Entity
@Table(name = "sbumaster")
public class Sbumaster implements java.io.Serializable {

	private int sbuid;
	private int sno;
	private String sbuname;
	private String description;
	private boolean valid;
	private String updatedby;
	private Date updateddate;
	private String updatedip;
	private Set<Ticketmaster> ticketmasters = new HashSet<Ticketmaster>(0);
	private Set<Feedbackformmaster> feedbackformmasters = new HashSet<Feedbackformmaster>(0);
	private Set<Questionmaster> questionmasters = new HashSet<Questionmaster>(0);
	private Set<Formmaster> formmasters = new HashSet<Formmaster>(0);

	public Sbumaster() {
	}

	public Sbumaster(int sbuid, int sno, String sbuname, boolean valid, String updatedby, Date updateddate,
			String updatedip) {
		this.sbuid = sbuid;
		this.sno = sno;
		this.sbuname = sbuname;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
	}

	public Sbumaster(int sbuid, int sno, String sbuname, String description, boolean valid, String updatedby,
			Date updateddate, String updatedip, Set<Ticketmaster> ticketmasters,
			Set<Feedbackformmaster> feedbackformmasters, Set<Questionmaster> questionmasters,
			Set<Formmaster> formmasters) {
		this.sbuid = sbuid;
		this.sno = sno;
		this.sbuname = sbuname;
		this.description = description;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
		this.ticketmasters = ticketmasters;
		this.feedbackformmasters = feedbackformmasters;
		this.questionmasters = questionmasters;
		this.formmasters = formmasters;
	}

	@Id

	@Column(name = "sbuid", unique = true, nullable = false)
	public int getSbuid() {
		return this.sbuid;
	}

	public void setSbuid(int sbuid) {
		this.sbuid = sbuid;
	}

	@Generated(GenerationTime.INSERT)
	@Column(name = "sno", insertable = false, nullable = false)
	public int getSno() {
		return this.sno;
	}

	public void setSno(int sno) {
		this.sno = sno;
	}

	@Column(name = "sbuname", nullable = false)
	public String getSbuname() {
		return this.sbuname;
	}

	public void setSbuname(String sbuname) {
		this.sbuname = sbuname;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "valid", nullable = false)
	public boolean isValid() {
		return this.valid;
	}

	public void setValid(boolean valid) {
		this.valid = valid;
	}

	@Column(name = "updatedby", nullable = false, length = 150)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updateddate", nullable = false, length = 29)
	public Date getUpdateddate() {
		return this.updateddate;
	}

	public void setUpdateddate(Date updateddate) {
		this.updateddate = updateddate;
	}

	@Column(name = "updatedip", nullable = false, length = 150)
	public String getUpdatedip() {
		return this.updatedip;
	}

	public void setUpdatedip(String updatedip) {
		this.updatedip = updatedip;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sbumaster")
	public Set<Ticketmaster> getTicketmasters() {
		return this.ticketmasters;
	}

	public void setTicketmasters(Set<Ticketmaster> ticketmasters) {
		this.ticketmasters = ticketmasters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sbumaster")
	public Set<Feedbackformmaster> getFeedbackformmasters() {
		return this.feedbackformmasters;
	}

	public void setFeedbackformmasters(Set<Feedbackformmaster> feedbackformmasters) {
		this.feedbackformmasters = feedbackformmasters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sbumaster")
	public Set<Questionmaster> getQuestionmasters() {
		return this.questionmasters;
	}

	public void setQuestionmasters(Set<Questionmaster> questionmasters) {
		this.questionmasters = questionmasters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "sbumaster")
	public Set<Formmaster> getFormmasters() {
		return this.formmasters;
	}

	public void setFormmasters(Set<Formmaster> formmasters) {
		this.formmasters = formmasters;
	}

}
