package com.leonia.wellness.entity;
// Generated Aug 20, 2016 4:05:55 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;

/**
 * Feedbackformmaster generated by hbm2java
 */
@Entity
@Table(name = "feedbackformmaster")
public class Feedbackformmaster implements java.io.Serializable {

	private int feedbackformid;
	private Billmaster billmaster;
	private Formmaster formmaster;
	private Guestmaster guestmaster;
	private Sbumaster sbumaster;
	private int sno;
	private Date formsentdate;
	private Date formreceiveddate;
	private boolean valid;
	private String updatedby;
	private Date updateddate;
	private String updatedip;
	private Boolean feedbackreceived;
	private Boolean automatedfeedback;
	private Set<Ticketmaster> ticketmasters = new HashSet<Ticketmaster>(0);
	private Set<Feedbackdetails> feedbackdetailses = new HashSet<Feedbackdetails>(0);

	public Feedbackformmaster() {
	}

	public Feedbackformmaster(int feedbackformid, Billmaster billmaster, Formmaster formmaster, Guestmaster guestmaster,
			Sbumaster sbumaster, int sno, Date formsentdate, boolean valid, String updatedby, Date updateddate,
			String updatedip) {
		this.feedbackformid = feedbackformid;
		this.billmaster = billmaster;
		this.formmaster = formmaster;
		this.guestmaster = guestmaster;
		this.sbumaster = sbumaster;
		this.sno = sno;
		this.formsentdate = formsentdate;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
	}

	public Feedbackformmaster(int feedbackformid, Billmaster billmaster, Formmaster formmaster, Guestmaster guestmaster,
			Sbumaster sbumaster, int sno, Date formsentdate, Date formreceiveddate, boolean valid, String updatedby,
			Date updateddate, String updatedip, Boolean feedbackreceived, Boolean automatedfeedback,
			Set<Ticketmaster> ticketmasters, Set<Feedbackdetails> feedbackdetailses) {
		this.feedbackformid = feedbackformid;
		this.billmaster = billmaster;
		this.formmaster = formmaster;
		this.guestmaster = guestmaster;
		this.sbumaster = sbumaster;
		this.sno = sno;
		this.formsentdate = formsentdate;
		this.formreceiveddate = formreceiveddate;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
		this.feedbackreceived = feedbackreceived;
		this.automatedfeedback = automatedfeedback;
		this.ticketmasters = ticketmasters;
		this.feedbackdetailses = feedbackdetailses;
	}

	@Id

	@Column(name = "feedbackformid", unique = true, nullable = false)
	public int getFeedbackformid() {
		return this.feedbackformid;
	}

	public void setFeedbackformid(int feedbackformid) {
		this.feedbackformid = feedbackformid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "billno", nullable = false)
	public Billmaster getBillmaster() {
		return this.billmaster;
	}

	public void setBillmaster(Billmaster billmaster) {
		this.billmaster = billmaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "formid", nullable = false)
	public Formmaster getFormmaster() {
		return this.formmaster;
	}

	public void setFormmaster(Formmaster formmaster) {
		this.formmaster = formmaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "guestid", nullable = false)
	public Guestmaster getGuestmaster() {
		return this.guestmaster;
	}

	public void setGuestmaster(Guestmaster guestmaster) {
		this.guestmaster = guestmaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sbuid", nullable = false)
	public Sbumaster getSbumaster() {
		return this.sbumaster;
	}

	public void setSbumaster(Sbumaster sbumaster) {
		this.sbumaster = sbumaster;
	}

	@Generated(GenerationTime.INSERT)
	@Column(name = "sno", insertable = false, nullable = false)
	public int getSno() {
		return this.sno;
	}

	public void setSno(int sno) {
		this.sno = sno;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "formsentdate", nullable = false, length = 13)
	public Date getFormsentdate() {
		return this.formsentdate;
	}

	public void setFormsentdate(Date formsentdate) {
		this.formsentdate = formsentdate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "formreceiveddate", length = 13)
	public Date getFormreceiveddate() {
		return this.formreceiveddate;
	}

	public void setFormreceiveddate(Date formreceiveddate) {
		this.formreceiveddate = formreceiveddate;
	}

	@Column(name = "valid", nullable = false)
	public boolean isValid() {
		return this.valid;
	}

	public void setValid(boolean valid) {
		this.valid = valid;
	}

	@Column(name = "updatedby", nullable = false, length = 150)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updateddate", nullable = false, length = 29)
	public Date getUpdateddate() {
		return this.updateddate;
	}

	public void setUpdateddate(Date updateddate) {
		this.updateddate = updateddate;
	}

	@Column(name = "updatedip", nullable = false, length = 150)
	public String getUpdatedip() {
		return this.updatedip;
	}

	public void setUpdatedip(String updatedip) {
		this.updatedip = updatedip;
	}

	@Column(name = "feedbackreceived")
	public Boolean getFeedbackreceived() {
		return this.feedbackreceived;
	}

	public void setFeedbackreceived(Boolean feedbackreceived) {
		this.feedbackreceived = feedbackreceived;
	}

	@Column(name = "automatedfeedback")
	public Boolean getAutomatedfeedback() {
		return this.automatedfeedback;
	}

	public void setAutomatedfeedback(Boolean automatedfeedback) {
		this.automatedfeedback = automatedfeedback;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "feedbackformmaster")
	public Set<Ticketmaster> getTicketmasters() {
		return this.ticketmasters;
	}

	public void setTicketmasters(Set<Ticketmaster> ticketmasters) {
		this.ticketmasters = ticketmasters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "feedbackformmaster")
	public Set<Feedbackdetails> getFeedbackdetailses() {
		return this.feedbackdetailses;
	}

	public void setFeedbackdetailses(Set<Feedbackdetails> feedbackdetailses) {
		this.feedbackdetailses = feedbackdetailses;
	}

}
