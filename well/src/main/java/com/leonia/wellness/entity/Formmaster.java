package com.leonia.wellness.entity;
// Generated Aug 20, 2016 2:52:14 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;

/**
 * Formmaster generated by hbm2java
 */
@Entity
@Table(name = "formmaster")
public class Formmaster implements java.io.Serializable {

	private int formid;
	private Sbumaster sbumaster;
	private int sno;
	private String formdescription;
	private int questionscount;
	private boolean valid;
	private String updatedby;
	private Date updateddate;
	private String updatedip;
	private Set<Ticketmaster> ticketmasters = new HashSet<Ticketmaster>(0);
	private Set<Feedbackformmaster> feedbackformmasters = new HashSet<Feedbackformmaster>(0);
	private Set<Questionmaster> questionmasters = new HashSet<Questionmaster>(0);

	public Formmaster() {
	}

	public Formmaster(int formid, Sbumaster sbumaster, int sno, String formdescription, int questionscount,
			boolean valid, String updatedby, Date updateddate, String updatedip) {
		this.formid = formid;
		this.sbumaster = sbumaster;
		this.sno = sno;
		this.formdescription = formdescription;
		this.questionscount = questionscount;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
	}

	public Formmaster(int formid, Sbumaster sbumaster, int sno, String formdescription, int questionscount,
			boolean valid, String updatedby, Date updateddate, String updatedip, Set<Ticketmaster> ticketmasters,
			Set<Feedbackformmaster> feedbackformmasters, Set<Questionmaster> questionmasters) {
		this.formid = formid;
		this.sbumaster = sbumaster;
		this.sno = sno;
		this.formdescription = formdescription;
		this.questionscount = questionscount;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
		this.ticketmasters = ticketmasters;
		this.feedbackformmasters = feedbackformmasters;
		this.questionmasters = questionmasters;
	}

	@Id

	@Column(name = "formid", unique = true, nullable = false)
	public int getFormid() {
		return this.formid;
	}

	public void setFormid(int formid) {
		this.formid = formid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sbuid", nullable = false)
	public Sbumaster getSbumaster() {
		return this.sbumaster;
	}

	public void setSbumaster(Sbumaster sbumaster) {
		this.sbumaster = sbumaster;
	}

	@Generated(GenerationTime.INSERT)
	@Column(name = "sno", insertable = false, nullable = false)
	public int getSno() {
		return this.sno;
	}

	public void setSno(int sno) {
		this.sno = sno;
	}

	@Column(name = "formdescription", nullable = false, length = 150)
	public String getFormdescription() {
		return this.formdescription;
	}

	public void setFormdescription(String formdescription) {
		this.formdescription = formdescription;
	}

	@Column(name = "questionscount", nullable = false)
	public int getQuestionscount() {
		return this.questionscount;
	}

	public void setQuestionscount(int questionscount) {
		this.questionscount = questionscount;
	}

	@Column(name = "valid", nullable = false)
	public boolean isValid() {
		return this.valid;
	}

	public void setValid(boolean valid) {
		this.valid = valid;
	}

	@Column(name = "updatedby", nullable = false, length = 150)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updateddate", nullable = false, length = 29)
	public Date getUpdateddate() {
		return this.updateddate;
	}

	public void setUpdateddate(Date updateddate) {
		this.updateddate = updateddate;
	}

	@Column(name = "updatedip", nullable = false, length = 150)
	public String getUpdatedip() {
		return this.updatedip;
	}

	public void setUpdatedip(String updatedip) {
		this.updatedip = updatedip;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "formmaster")
	public Set<Ticketmaster> getTicketmasters() {
		return this.ticketmasters;
	}

	public void setTicketmasters(Set<Ticketmaster> ticketmasters) {
		this.ticketmasters = ticketmasters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "formmaster")
	public Set<Feedbackformmaster> getFeedbackformmasters() {
		return this.feedbackformmasters;
	}

	public void setFeedbackformmasters(Set<Feedbackformmaster> feedbackformmasters) {
		this.feedbackformmasters = feedbackformmasters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "formmaster")
	public Set<Questionmaster> getQuestionmasters() {
		return this.questionmasters;
	}

	public void setQuestionmasters(Set<Questionmaster> questionmasters) {
		this.questionmasters = questionmasters;
	}

}
