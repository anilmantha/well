package com.leonia.wellness.entity;

// Generated 8 Aug, 2016 12:44:55 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Billsettlement generated by hbm2java
 */
@Entity
@Table(name = "billsettlement")
public class Billsettlement implements java.io.Serializable {

	private int sno;
	private Billmaster billmaster;
	private Cardtypemaster cardtypemasterByDebitcardtype;
	private Cardtypemaster cardtypemasterByCreditcardtype;
	private Creditlistmaster creditlistmaster;
	private Giftvouchermaster giftvouchermaster;
	private Guestmaster guestmaster;
	private Marketingvouchermaster marketingvouchermaster;
	private Membershipmaster membershipmaster;
	private Paymodemaster paymodemaster;
	private BigDecimal amount;
	private BigDecimal outstandingamount;
	private String remarks;
	private String chequenumber;
	private Date chequedate;
	private String chequepayee;
	private String chequebank;
	private Integer creditcardnumber;
	private String creditcardname;
	private Integer debitcardnumber;
	private String debitcardname;
	private boolean valid;
	private String updatedby;
	private Date updateddate;
	private String updatedip;

	public Billsettlement() {
	}

	public Billsettlement(int sno, Billmaster billmaster,
			Guestmaster guestmaster, Paymodemaster paymodemaster,
			BigDecimal amount, BigDecimal outstandingamount, boolean valid,
			String updatedby, Date updateddate, String updatedip) {
		this.sno = sno;
		this.billmaster = billmaster;
		this.guestmaster = guestmaster;
		this.paymodemaster = paymodemaster;
		this.amount = amount;
		this.outstandingamount = outstandingamount;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
	}

	public Billsettlement(int sno, Billmaster billmaster,
			Cardtypemaster cardtypemasterByDebitcardtype,
			Cardtypemaster cardtypemasterByCreditcardtype,
			Creditlistmaster creditlistmaster,
			Giftvouchermaster giftvouchermaster, Guestmaster guestmaster,
			Marketingvouchermaster marketingvouchermaster,
			Membershipmaster membershipmaster, Paymodemaster paymodemaster,
			BigDecimal amount, BigDecimal outstandingamount, String remarks,
			String chequenumber, Date chequedate, String chequepayee,
			String chequebank, Integer creditcardnumber, String creditcardname,
			Integer debitcardnumber, String debitcardname, boolean valid,
			String updatedby, Date updateddate, String updatedip) {
		this.sno = sno;
		this.billmaster = billmaster;
		this.cardtypemasterByDebitcardtype = cardtypemasterByDebitcardtype;
		this.cardtypemasterByCreditcardtype = cardtypemasterByCreditcardtype;
		this.creditlistmaster = creditlistmaster;
		this.giftvouchermaster = giftvouchermaster;
		this.guestmaster = guestmaster;
		this.marketingvouchermaster = marketingvouchermaster;
		this.membershipmaster = membershipmaster;
		this.paymodemaster = paymodemaster;
		this.amount = amount;
		this.outstandingamount = outstandingamount;
		this.remarks = remarks;
		this.chequenumber = chequenumber;
		this.chequedate = chequedate;
		this.chequepayee = chequepayee;
		this.chequebank = chequebank;
		this.creditcardnumber = creditcardnumber;
		this.creditcardname = creditcardname;
		this.debitcardnumber = debitcardnumber;
		this.debitcardname = debitcardname;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "sno", unique = true, insertable = false, nullable = false)
	public int getSno() {
		return this.sno;
	}

	public void setSno(int sno) {
		this.sno = sno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "billno", nullable = false)
	public Billmaster getBillmaster() {
		return this.billmaster;
	}

	public void setBillmaster(Billmaster billmaster) {
		this.billmaster = billmaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "debitcardtype")
	public Cardtypemaster getCardtypemasterByDebitcardtype() {
		return this.cardtypemasterByDebitcardtype;
	}

	public void setCardtypemasterByDebitcardtype(
			Cardtypemaster cardtypemasterByDebitcardtype) {
		this.cardtypemasterByDebitcardtype = cardtypemasterByDebitcardtype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "creditcardtype")
	public Cardtypemaster getCardtypemasterByCreditcardtype() {
		return this.cardtypemasterByCreditcardtype;
	}

	public void setCardtypemasterByCreditcardtype(
			Cardtypemaster cardtypemasterByCreditcardtype) {
		this.cardtypemasterByCreditcardtype = cardtypemasterByCreditcardtype;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "corporateid")
	public Creditlistmaster getCreditlistmaster() {
		return this.creditlistmaster;
	}

	public void setCreditlistmaster(Creditlistmaster creditlistmaster) {
		this.creditlistmaster = creditlistmaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "giftvoucherid")
	public Giftvouchermaster getGiftvouchermaster() {
		return this.giftvouchermaster;
	}

	public void setGiftvouchermaster(Giftvouchermaster giftvouchermaster) {
		this.giftvouchermaster = giftvouchermaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "guestid", nullable = false)
	public Guestmaster getGuestmaster() {
		return this.guestmaster;
	}

	public void setGuestmaster(Guestmaster guestmaster) {
		this.guestmaster = guestmaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "marketingvoucherid")
	public Marketingvouchermaster getMarketingvouchermaster() {
		return this.marketingvouchermaster;
	}

	public void setMarketingvouchermaster(
			Marketingvouchermaster marketingvouchermaster) {
		this.marketingvouchermaster = marketingvouchermaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "membershipid")
	public Membershipmaster getMembershipmaster() {
		return this.membershipmaster;
	}

	public void setMembershipmaster(Membershipmaster membershipmaster) {
		this.membershipmaster = membershipmaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "paymodeid", nullable = false)
	public Paymodemaster getPaymodemaster() {
		return this.paymodemaster;
	}

	public void setPaymodemaster(Paymodemaster paymodemaster) {
		this.paymodemaster = paymodemaster;
	}

	@Column(name = "amount", nullable = false, precision = 15)
	public BigDecimal getAmount() {
		return this.amount;
	}

	public void setAmount(BigDecimal amount) {
		this.amount = amount;
	}

	@Column(name = "outstandingamount", nullable = false, precision = 15)
	public BigDecimal getOutstandingamount() {
		return this.outstandingamount;
	}

	public void setOutstandingamount(BigDecimal outstandingamount) {
		this.outstandingamount = outstandingamount;
	}

	@Column(name = "remarks")
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

	@Column(name = "chequenumber", length = 150)
	public String getChequenumber() {
		return this.chequenumber;
	}

	public void setChequenumber(String chequenumber) {
		this.chequenumber = chequenumber;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "chequedate", length = 13)
	public Date getChequedate() {
		return this.chequedate;
	}

	public void setChequedate(Date chequedate) {
		this.chequedate = chequedate;
	}

	@Column(name = "chequepayee", length = 150)
	public String getChequepayee() {
		return this.chequepayee;
	}

	public void setChequepayee(String chequepayee) {
		this.chequepayee = chequepayee;
	}

	@Column(name = "chequebank", length = 250)
	public String getChequebank() {
		return this.chequebank;
	}

	public void setChequebank(String chequebank) {
		this.chequebank = chequebank;
	}

	@Column(name = "creditcardnumber")
	public Integer getCreditcardnumber() {
		return this.creditcardnumber;
	}

	public void setCreditcardnumber(Integer creditcardnumber) {
		this.creditcardnumber = creditcardnumber;
	}

	@Column(name = "creditcardname", length = 150)
	public String getCreditcardname() {
		return this.creditcardname;
	}

	public void setCreditcardname(String creditcardname) {
		this.creditcardname = creditcardname;
	}

	@Column(name = "debitcardnumber")
	public Integer getDebitcardnumber() {
		return this.debitcardnumber;
	}

	public void setDebitcardnumber(Integer debitcardnumber) {
		this.debitcardnumber = debitcardnumber;
	}

	@Column(name = "debitcardname", length = 150)
	public String getDebitcardname() {
		return this.debitcardname;
	}

	public void setDebitcardname(String debitcardname) {
		this.debitcardname = debitcardname;
	}

	@Column(name = "valid", nullable = false)
	public boolean isValid() {
		return this.valid;
	}

	public void setValid(boolean valid) {
		this.valid = valid;
	}

	@Column(name = "updatedby", nullable = false, length = 150)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updateddate", nullable = false, length = 29)
	public Date getUpdateddate() {
		return this.updateddate;
	}

	public void setUpdateddate(Date updateddate) {
		this.updateddate = updateddate;
	}

	@Column(name = "updatedip", nullable = false, length = 150)
	public String getUpdatedip() {
		return this.updatedip;
	}

	public void setUpdatedip(String updatedip) {
		this.updatedip = updatedip;
	}

}
