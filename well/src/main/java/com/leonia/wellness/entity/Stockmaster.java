package com.leonia.wellness.entity;

// Generated 20 Jul, 2016 3:39:07 PM by Hibernate Tools 4.3.1

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.hibernate.annotations.Generated;
import org.hibernate.annotations.GenerationTime;

/**
 * Stockmaster generated by hbm2java
 */
@Entity
@Table(name = "stockmaster")
public class Stockmaster implements java.io.Serializable {

	private int stockid;
	private Dropdowndetails dropdowndetails;
	private Stocksubgroupmaster stocksubgroupmaster;
	private int sno;
	private String stockname;
	private int reorderlevel;
	private int warninglevel;
	private BigDecimal available;
	private boolean valid;
	private String updatedby;
	private Date updateddate;
	private String updatedip;
	private BigDecimal unitprice;
	private Set<Productratemaster> productratemasters = new HashSet<Productratemaster>(
			0);
	private Set<Stockreceipt> stockreceipts = new HashSet<Stockreceipt>(0);
	private Set<Stockadjustment> stockadjustments = new HashSet<Stockadjustment>(
			0);
	private Set<Billdetails> billdetailses = new HashSet<Billdetails>(0);
	private Set<Appointmentstockconsumption> appointmentstockconsumptions = new HashSet<Appointmentstockconsumption>(
			0);
	private Set<Productsales> productsaleses = new HashSet<Productsales>(0);
	private Set<Servicestocksmaster> servicestocksmasters = new HashSet<Servicestocksmaster>(
			0);

	public Stockmaster() {
	}

	public Stockmaster(int stockid, Dropdowndetails dropdowndetails,
			Stocksubgroupmaster stocksubgroupmaster, int sno, String stockname,
			int reorderlevel, int warninglevel, BigDecimal available, boolean valid,
			String updatedby, Date updateddate, String updatedip,
			BigDecimal unitprice) {
		this.stockid = stockid;
		this.dropdowndetails = dropdowndetails;
		this.stocksubgroupmaster = stocksubgroupmaster;
		this.sno = sno;
		this.stockname = stockname;
		this.reorderlevel = reorderlevel;
		this.warninglevel = warninglevel;
		this.available = available;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
		this.unitprice = unitprice;
	}

	public Stockmaster(int stockid, Dropdowndetails dropdowndetails,
			Stocksubgroupmaster stocksubgroupmaster, int sno, String stockname,
			int reorderlevel, int warninglevel, BigDecimal available, boolean valid,
			String updatedby, Date updateddate, String updatedip,
			BigDecimal unitprice, Set<Productratemaster> productratemasters,
			Set<Stockreceipt> stockreceipts,
			Set<Stockadjustment> stockadjustments,
			Set<Billdetails> billdetailses,
			Set<Appointmentstockconsumption> appointmentstockconsumptions,
			Set<Productsales> productsaleses,
			Set<Servicestocksmaster> servicestocksmasters) {
		this.stockid = stockid;
		this.dropdowndetails = dropdowndetails;
		this.stocksubgroupmaster = stocksubgroupmaster;
		this.sno = sno;
		this.stockname = stockname;
		this.reorderlevel = reorderlevel;
		this.warninglevel = warninglevel;
		this.available = available;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
		this.unitprice = unitprice;
		this.productratemasters = productratemasters;
		this.stockreceipts = stockreceipts;
		this.stockadjustments = stockadjustments;
		this.billdetailses = billdetailses;
		this.appointmentstockconsumptions = appointmentstockconsumptions;
		this.productsaleses = productsaleses;
		this.servicestocksmasters = servicestocksmasters;
	}

	@Id
	@Column(name = "stockid", unique = true, nullable = false)
	public int getStockid() {
		return this.stockid;
	}

	public void setStockid(int stockid) {
		this.stockid = stockid;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "stocktypeid", nullable = false)
	public Dropdowndetails getDropdowndetails() {
		return this.dropdowndetails;
	}

	public void setDropdowndetails(Dropdowndetails dropdowndetails) {
		this.dropdowndetails = dropdowndetails;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "stocksubgroupid", nullable = false)
	public Stocksubgroupmaster getStocksubgroupmaster() {
		return this.stocksubgroupmaster;
	}

	public void setStocksubgroupmaster(Stocksubgroupmaster stocksubgroupmaster) {
		this.stocksubgroupmaster = stocksubgroupmaster;
	}

	@Generated(GenerationTime.INSERT)
	@Column(name = "sno", insertable = false, nullable = false)
	public int getSno() {
		return this.sno;
	}

	public void setSno(int sno) {
		this.sno = sno;
	}

	@Column(name = "stockname", nullable = false, length = 150)
	public String getStockname() {
		return this.stockname;
	}

	public void setStockname(String stockname) {
		this.stockname = stockname;
	}

	@Column(name = "reorderlevel", nullable = false)
	public int getReorderlevel() {
		return this.reorderlevel;
	}

	public void setReorderlevel(int reorderlevel) {
		this.reorderlevel = reorderlevel;
	}

	@Column(name = "warninglevel", nullable = false)
	public int getWarninglevel() {
		return this.warninglevel;
	}

	public void setWarninglevel(int warninglevel) {
		this.warninglevel = warninglevel;
	}

	@Column(name = "available", nullable = false)
	public BigDecimal getAvailable() {
		return this.available;
	}

	public void setAvailable(BigDecimal available) {
		this.available = available;
	}

	@Column(name = "valid", nullable = false)
	public boolean isValid() {
		return this.valid;
	}

	public void setValid(boolean valid) {
		this.valid = valid;
	}

	@Column(name = "updatedby", nullable = false, length = 150)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updateddate", nullable = false, length = 29)
	public Date getUpdateddate() {
		return this.updateddate;
	}

	public void setUpdateddate(Date updateddate) {
		this.updateddate = updateddate;
	}

	@Column(name = "updatedip", nullable = false, length = 150)
	public String getUpdatedip() {
		return this.updatedip;
	}

	public void setUpdatedip(String updatedip) {
		this.updatedip = updatedip;
	}

	@Column(name = "unitprice", nullable = false, precision = 15)
	public BigDecimal getUnitprice() {
		return this.unitprice;
	}

	public void setUnitprice(BigDecimal unitprice) {
		this.unitprice = unitprice;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "stockmaster")
	public Set<Productratemaster> getProductratemasters() {
		return this.productratemasters;
	}

	public void setProductratemasters(Set<Productratemaster> productratemasters) {
		this.productratemasters = productratemasters;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "stockmaster")
	public Set<Stockreceipt> getStockreceipts() {
		return this.stockreceipts;
	}

	public void setStockreceipts(Set<Stockreceipt> stockreceipts) {
		this.stockreceipts = stockreceipts;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "stockmaster")
	public Set<Stockadjustment> getStockadjustments() {
		return this.stockadjustments;
	}

	public void setStockadjustments(Set<Stockadjustment> stockadjustments) {
		this.stockadjustments = stockadjustments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "stockmaster")
	public Set<Billdetails> getBilldetailses() {
		return this.billdetailses;
	}

	public void setBilldetailses(Set<Billdetails> billdetailses) {
		this.billdetailses = billdetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "stockmaster")
	public Set<Appointmentstockconsumption> getAppointmentstockconsumptions() {
		return this.appointmentstockconsumptions;
	}

	public void setAppointmentstockconsumptions(
			Set<Appointmentstockconsumption> appointmentstockconsumptions) {
		this.appointmentstockconsumptions = appointmentstockconsumptions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "stockmaster")
	public Set<Productsales> getProductsaleses() {
		return this.productsaleses;
	}

	public void setProductsaleses(Set<Productsales> productsaleses) {
		this.productsaleses = productsaleses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "stockmaster")
	public Set<Servicestocksmaster> getServicestocksmasters() {
		return this.servicestocksmasters;
	}

	public void setServicestocksmasters(
			Set<Servicestocksmaster> servicestocksmasters) {
		this.servicestocksmasters = servicestocksmasters;
	}

}
