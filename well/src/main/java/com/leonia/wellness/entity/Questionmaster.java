package com.leonia.wellness.entity;
// Generated Aug 20, 2016 2:52:14 PM by Hibernate Tools 4.3.1.Final

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Questionmaster generated by hbm2java
 */
@Entity
@Table(name = "questionmaster", uniqueConstraints = @UniqueConstraint(columnNames = { "sbuid", "formid",
		"questionid" }) )
public class Questionmaster implements java.io.Serializable {

	private int sno;
	private Departmentmaster departmentmaster;
	private Formmaster formmaster;
	private Sbumaster sbumaster;
	private int questionid;
	private String questiondescription;
	private boolean valid;
	private String updatedby;
	private Date updateddate;
	private String updatedip;

	public Questionmaster() {
	}

	public Questionmaster(int sno, Departmentmaster departmentmaster, Formmaster formmaster, Sbumaster sbumaster,
			int questionid, String questiondescription, boolean valid, String updatedby, Date updateddate,
			String updatedip) {
		this.sno = sno;
		this.departmentmaster = departmentmaster;
		this.formmaster = formmaster;
		this.sbumaster = sbumaster;
		this.questionid = questionid;
		this.questiondescription = questiondescription;
		this.valid = valid;
		this.updatedby = updatedby;
		this.updateddate = updateddate;
		this.updatedip = updatedip;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "sno", unique = true, insertable = false, nullable = false)
	public int getSno() {
		return this.sno;
	}

	public void setSno(int sno) {
		this.sno = sno;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sectionid", nullable = false)
	public Departmentmaster getDepartmentmaster() {
		return this.departmentmaster;
	}

	public void setDepartmentmaster(Departmentmaster departmentmaster) {
		this.departmentmaster = departmentmaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "formid", nullable = false)
	public Formmaster getFormmaster() {
		return this.formmaster;
	}

	public void setFormmaster(Formmaster formmaster) {
		this.formmaster = formmaster;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "sbuid", nullable = false)
	public Sbumaster getSbumaster() {
		return this.sbumaster;
	}

	public void setSbumaster(Sbumaster sbumaster) {
		this.sbumaster = sbumaster;
	}

	@Column(name = "questionid", nullable = false)
	public int getQuestionid() {
		return this.questionid;
	}

	public void setQuestionid(int questionid) {
		this.questionid = questionid;
	}

	@Column(name = "questiondescription", nullable = false)
	public String getQuestiondescription() {
		return this.questiondescription;
	}

	public void setQuestiondescription(String questiondescription) {
		this.questiondescription = questiondescription;
	}

	@Column(name = "valid", nullable = false)
	public boolean isValid() {
		return this.valid;
	}

	public void setValid(boolean valid) {
		this.valid = valid;
	}

	@Column(name = "updatedby", nullable = false, length = 150)
	public String getUpdatedby() {
		return this.updatedby;
	}

	public void setUpdatedby(String updatedby) {
		this.updatedby = updatedby;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updateddate", nullable = false, length = 29)
	public Date getUpdateddate() {
		return this.updateddate;
	}

	public void setUpdateddate(Date updateddate) {
		this.updateddate = updateddate;
	}

	@Column(name = "updatedip", nullable = false, length = 150)
	public String getUpdatedip() {
		return this.updatedip;
	}

	public void setUpdatedip(String updatedip) {
		this.updatedip = updatedip;
	}

}
